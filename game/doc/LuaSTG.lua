---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2020/6/12 0012 18:38
---来给一些函数做假function

---@return boolean
function _G:IsValid()
end

function _G:Del()

end
function _G:Kill()

end

local ran = {}
---@return number
function ran:Float(a, b)

end
---@return number
function ran:Int(a, b)

end
---@return number
function ran:Sign()

end
function ran:Seed(a, b)

end
---@return number
function ran:GetSeed()

end

function Rand()
    return ran
end

---设置是否显示光标。默认为false
function SetSplash(open)

end

---@param unit object
---@return object
function New(unit, ...)
end

---@param unit1 object
---@param unit2 object
---@return number
function Angle(unit1, unit2)
end

---@param x1 number
---@param y1 number
---@param x2 number
---@param y2 number
---@return number
function Angle(x1, y1, x2, y2)
end

---@param unit1 object
---@param unit2 object
---@return number
function Dist(unit1, unit2)
end

---@param x1 number
---@param y1 number
---@param x2 number
---@param y2 number
---@return number
function Dist(x1, y1, x2, y2)
end

---@param t table
---@return any
function unpack(t)
end

---@param bgm string
---@param v number
function SetBGMVolume(bgm, v)
end

---@param bgm  string
---@param v number
---@param start_time number
function PlayMusic(bgm, v, start_time)
end

---@param bgm  string
function StopMusic(bgm)
end
---@param bgm  string
function PauseMusic(bgm)
end
---@param bgm  string
function RusumeMusic(bgm)
end
---@param bgm  string
---@return string
function GetMusicState(bgm)
end
---@param snd  string
function StopSound(snd)
end
---@param snd  string
function PauseSound(snd)
end
---@param snd  string
function RusumeSound(snd)
end
---@param snd  string
---@return string
function GetSoundState(snd)
end
---@param vol number
function SetSEVolume(vol)
end
---@param vol number
function SetBGMVolume(vol)
end
---@param bgm string
---@param vol number
function SetBGMVolume(vol, bgm)
end

---@param tex string
---@param path string
function LoadTexture(tex, path)
end

---@param name string
---@param tex_name string
---@param x number
---@param y number
---@param w number
---@param h number
---@param n number
---@param m number
---@param intv number
---@param a number
---@param b number
---@param rect boolean
function LoadAnimation(name, tex_name, x, y, w, h, n, m, intv, a, b, rect)
end
---@param music string
---@param path string
---@param loop_end number
---@param loop_length number
function LoadMusic(music, path, loop_end, loop_length)
end

---@param fx_name string
---@param path string
function LoadFX(fx_name, path)
end

---@param sound string
---@param path string
function LoadSound(sound, path)
end

---@param particle string
---@param path string
---@param img string
---@param a number
---@param b number
---@param rect boolean
function LoadPS(particle, path, img, a, b, rect)
end

---@param img string
---@param x number
---@param y number
---@param rot number
---@param hscale number
---@param vscale number
---@param z number
function Render(img, x, y, rot, hscale, vscale, z)
end

---@param img string
---@param x1 number
---@param x2 number
---@param y1 number
---@param y2 number
function RenderRect(img, x1, x2, y1, y2)
end

---@param img string
---@param x1 number
---@param x2 number
---@param x3 number
---@param x4 number
---@param y1 number
---@param y2 number
---@param y3 number
---@param y4 number
---@param z1 number
---@param z2 number
---@param z3 number
---@param z4 number
function Render4V(img, x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4)
end

--- 指定 4 个顶点绘制纹理
--- 每个顶点的结构为 { x:number, y:number, z:number, u:number, v:number, color:lstg.Color }
--- uv 坐标以图片左上角为原点，u 轴向右，v 轴向下，单位为像素（不是 0.0 到 1.0）
---@param texname string
---@param blendmode lstg.BlendMode
---@param v1 number[]
---@param v2 number[]
---@param v3 number[]
---@param v4 number[]
function RenderTexture(texname, blendmode, v1, v2, v3, v4)
end

---@param color lstg.Color
function RenderClear(color)
end

---@alias lstg.KnownSamplerState '""' | '"point+wrap"' | '"point+clamp"' | '"linear+wrap"' | '"linear+clamp"'
---
--- 设置纹理使用的采样器
--- 当参数 known_sampler_state 为 "" 时，纹理使用 LuaSTG 默认的采样器
--- LuaSTG 默认情况下使用 "linear+clamp"
---@param texture_name string
---@param known_sampler_state lstg.KnownSamplerState
function SetTextureSamplerState(texture_name, known_sampler_state)
end

---@param name string
---@param x number
---@param y number
function SetImageCenter(name, x, y)
end
---@param name string
---@param x number
---@param y number
function SetAnimationCenter(name, x, y)
end
---@param blend string
---@param a number
---@param r  number
---@param g number
---@param b number
function _G:SetImgState(blend, a, r, g, b)
end

---@param name string
function CreateRenderTarget(name)
end
---@param name string
function PushRenderTarget(name)
end
---@param name string
function PopRenderTarget(name)
end

---@param name string
---@param shader_name string
---@param blend string
---@param args table
function PostEffect(shader_name, name, sampler, blend, args)
end

---@param groupid number
---@param id number
---@return number,object
---@class NextObject
function NextObject(groupid, id)
end
---@param obj_group number
---@return NextObject,number,number
function ObjList(obj_group)
end

---@param left number
---@param right number
---@param bottom number
---@param top number
function SetViewport(left, right, bottom, top)
end

---@param left number
---@param right number
---@param bottom number
---@param top number
function SetOrtho(left, right, bottom, top)
end
---@param eyeX number
---@param eyeY number
---@param eyeZ number
---@param atX number
---@param atY number
---@param atZ number
---@param upX number
---@param upY number
---@param upZ number
---@param fovy number
---@param aspect number
---@param zn number
---@param zf number
function SetPerspective(eyeX, eyeY, eyeZ, atX, atY, atZ, upX, upY, upZ, fovy, aspect, zn, zf)
end
---@param vk_code number
---@return boolean
function GetKeyState(vk_code)
end
---@return number
function GetLastKey()
end
---@return string
function GetLastChar()
end
---@return number,number
function GetMousePosition()
end
---@param button number
---@return boolean
function GetMouseState(button)
end

---@param status string | " 'global' " | "'stage'"
function SetResourceStatus(status)

end

---检测group1碰撞group2，执行group1的colli函数
---@param group1 number
---@param group2 number
function CollisionCheck(group1, group2)

end

function RemoveResource(status, id, name)

end

function _G:SetV(v, a, rot)

end
function _G:GetV()

end

function _G:DefaultRenderFunc()

end